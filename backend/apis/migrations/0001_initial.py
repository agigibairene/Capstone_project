# Generated by Django 5.2.3 on 2025-07-06 18:40

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FarmerKYC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('role', models.CharField(choices=[('Student', 'Student'), ('Farmer', 'Farmer'), ('Entrepreneur', 'Entrepreneur'), ('Other', 'Other')], max_length=20)),
                ('date_of_birth', models.DateField()),
                ('nationality', models.CharField(max_length=100)),
                ('background', models.TextField(help_text='Brief background information')),
                ('address', models.TextField(help_text='Complete address')),
                ('id_type', models.CharField(choices=[('National ID', 'National ID'), ('Passport', 'Passport'), ("Driver's License", "Driver's License"), ('Voter ID', 'Voter ID')], max_length=20)),
                ('id_number', models.CharField(max_length=100)),
                ('id_document', models.FileField(upload_to='documents/id/')),
                ('profile_picture', models.ImageField(upload_to='profiles/')),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('changes_allowed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_kyc', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Farmer KYC',
                'verbose_name_plural': 'Farmer KYCs',
            },
        ),
        migrations.CreateModel(
            name='InvestorKYC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('date_of_birth', models.DateField()),
                ('nationality', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=20)),
                ('id_type', models.CharField(choices=[('passport', 'Passport'), ('national_id', 'National ID'), ('driver_license', "Driver's License")], max_length=20)),
                ('id_number', models.CharField(max_length=100)),
                ('id_document', models.FileField(upload_to='documents/id/')),
                ('profile_picture', models.ImageField(upload_to='profiles/')),
                ('address', models.TextField()),
                ('occupation', models.CharField(max_length=200)),
                ('income_source', models.CharField(choices=[('salary', 'Salary'), ('business', 'Business'), ('investment', 'Investment'), ('other', 'Other')], max_length=20)),
                ('annual_income', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('purpose', models.TextField(help_text='Purpose of the investment account')),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('changes_allowed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='investor_kyc', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Investor KYC',
                'verbose_name_plural': 'Investor KYCs',
            },
        ),
        migrations.CreateModel(
            name='KYCVerificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('submitted', 'Submitted'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('pending', 'Pending Review'), ('updated', 'Updated'), ('change_requested', 'Change Requested')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='kyc_actions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'KYC Verification Log',
                'verbose_name_plural': 'KYC Verification Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Opportunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('organization', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('theme', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('grant', 'Grant'), ('hackathon', 'Hackathon'), ('funding_mentorship', 'Funding + Mentorship'), ('competition', 'Competition'), ('other', 'Other')], max_length=50)),
                ('tags', models.JSONField(default=list, help_text='List of tags')),
                ('description', models.TextField()),
                ('full_description', models.TextField()),
                ('amount', models.CharField(max_length=100)),
                ('deadline', models.DateField()),
                ('application_link', models.URLField(help_text='Link to application form or website', max_length=500)),
                ('posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('views', models.PositiveIntegerField(default=0)),
                ('applicants', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opportunities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Opportunities',
                'ordering': ['-posted'],
            },
        ),
        migrations.CreateModel(
            name='OTPToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp_code', models.CharField(blank=True, max_length=5)),
                ('otp_created_at', models.DateTimeField(auto_now_add=True)),
                ('otp_expires_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otps', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-otp_created_at'],
            },
        ),
        migrations.CreateModel(
            name='PasswordReset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reset_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_when', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('brief', models.TextField(max_length=500)),
                ('description', models.TextField()),
                ('benefits', models.TextField(blank=True)),
                ('target_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('deadline', models.DateField()),
                ('image_url', models.URLField(blank=True, null=True)),
                ('original_proposal', models.FileField(help_text='Upload your project proposal PDF', upload_to='proposals/original/')),
                ('watermarked_proposal', models.FileField(blank=True, editable=False, null=True, upload_to='proposals/watermarked/')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('funded', 'Funded'), ('completed', 'Completed')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['-created_at'],
                'permissions': [('can_view_project', 'Can view project'), ('can_create_project', 'Can create project')],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('role', models.CharField(choices=[('Farmer', 'Farmer'), ('Investor', 'Investor')], max_length=10)),
                ('organization', models.CharField(blank=True, max_length=200)),
                ('investor_type', models.CharField(blank=True, choices=[('Individual', 'Individual'), ('Organization', 'Organization')], max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
    ]
